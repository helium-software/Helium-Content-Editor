#!/usr/bin/tclsh8.5

## enter the project directory (where this script resides)

cd [file dirname [info script]]

## handle --verbose flag

if {"--verbose" in $argv} {
  set verbose yes
  puts "Searching for directories:"
} else {
  set verbose no
}

## recursively search for subdirectories

set tobevisited [list .]

if {$verbose} {set startAt [clock milliseconds]}

set dirs [list]
set i 0
while {$i<[llength $tobevisited]} {
  set dir [lindex $tobevisited $i]
  if {$verbose} {puts "Found $dir"}
  incr i
  lappend dirs $dir/*.tcl  ;# add glob pattern in the same step
  lappend tobevisited {*}[glob -directory $dir -type d -nocomplain *]
}

if {$verbose} {puts "Search finished, elapsed [expr [clock milliseconds] - $startAt] milliseconds."}

## execute auto_mkindex to build ./tclIndex

if {$verbose} {
 puts "Executing auto_mkindex to build [file normalize ./tclIndex]:"
 set startAt [clock milliseconds]
}

auto_mkindex . {*}$dirs

if {$verbose} {puts "Building the index finished, elapsed [expr [clock milliseconds] - $startAt] milliseconds."}

## search for (only non-empty) namespaces in tclIndex
## and add commands for creating them at the beginning of tclIndex

if {$verbose} {
 puts "Extracting namespaces from tclIndex, adding them to the beginning:"
 set startAt [clock milliseconds]
}

unset auto_index
source tclIndex
foreach procname [array names auto_index] {
  # the array "namespaces" is used as a 'set' here,
  # i.e. only the key names are of interest.
  set namespaces([namespace qualifier $procname]) 1
}
# Remove the "" entry to avoid generating a 'namespace eval  {}' line.
# [unset namespaces() would complain if there is no "" key.]
array unset namespaces ""

file rename tclIndex tclIndex~~
set source [open tclIndex~~ r]
set target [open tclIndex w]

puts $target \
{# Tcl autoload index file, version 2.0
# This file has been generated by a make-tclIndex script and needs to
# be sourced (directly or by including this directory in auto_path)
# to set up indexing information for commands (array auto_index) and
# to make any namespaces known that contain those commands.
# When using auto_path, note that this file is not instantly sourced,
# but only when a not-yet-loaded procedure is called. You may want to
# source it directly to have all namespaces created (useful for plugin
# searching).

# Namespace creation follows
}
foreach spacename [array names namespaces] {
  puts $target "namespace eval $spacename {}"
}
puts $target "\n# Index of procedures follows\n"

# Strip auto_mkindex generated comments and newline
while {[gets $source]!=""} {}
# Copy remaining part of tclIndex~~
fcopy $source $target
close $source
close $target

file delete tclIndex~~

if {$verbose} {puts "Finished, elapsed [expr [clock milliseconds] - $startAt] milliseconds."}
